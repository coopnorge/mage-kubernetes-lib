---
on:
  pull_request: {}
  push:
    branches:
      - main
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      run-golang-ci: ${{ steps.changes.outputs.golang == 'true' }}
      run-pallet-ci: ${{ steps.changes.outputs.pallet == 'true' }}
    steps:
      - uses: actions/checkout@v4
      - id: xdg_cache_hash
        run: echo "xdg_cache_hash=${{hashFiles('./docker-compose.yml', './docker-compose/Dockerfile', './**/go.sum')}}" >> $GITHUB_OUTPUT
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: json
          filters: |
            golang:
              - '!.pallet/*'
            pallet:
              - '.pallet/*'
      - name: Debug ...
        run: |
          echo "::${{ steps.changes.outputs }}"
  go-ci:
    name: Go CI
    needs: ["setup"]
    if: ${{ needs.setup.outputs.run-golang-ci == 'true' }}
    runs-on: ubuntu-latest
    env:
      docker-compose-service: golang-devtools
      XDG_CACHE_HOME: ${{ github.workspace }}/.cache/xdg
    steps:
      - uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # pin@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # pin@v3
      - id: xdg_cache_hash
        run: echo "xdg_cache_hash=${{hashFiles('./docker-compose.yml', './docker-compose/Dockerfile', './go.sum')}}" >> $GITHUB_OUTPUT
      - name: Cache xdg
        uses: actions/cache@v4
        with:
          path: ${{ env.XDG_CACHE_HOME }}
          key: xdg-${{ github.repository }}-${{ github.job }}-${{ steps.xdg_cache_hash.outputs.xdg_cache_hash }}
          restore-keys: |
            xdg-${{ github.repository }}-${{ github.job }}-${{ steps.xdg_cache_hash.outputs.xdg_cache_hash }}
            xdg-${{ github.repository }}-${{ github.job }}-
      - name: Login to GitHub Container Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # pin@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Configure access to internal and private GitHub repos
        run: git config --global url."https://${{ secrets.REVIEWBOT_GITHUB_TOKEN }}:x-oauth-basic@github.com/coopnorge".insteadOf "https://github.com/coopnorge"
      - name: Build devtools
        run: docker compose build
      - name: Validate
        run: docker compose run --rm ${{ env.docker-compose-service }} validate VERBOSE=all

  pallet-ci:
    name: Pallet CI
    if: ${{ needs.setup.outputs.run-pallet-ci == 'true' }}
    concurrency:
      group: ${{ github.repository }}-${{ github.workflow }}-pallet-ci-${{ github.ref }}
      cancel-in-progress: true
    needs: ["setup"]
    uses: coopnorge/github-workflow-kubernetes-validation/.github/workflows/kubernetes-validation.yaml@b86a86083971ff4a1b3fa0ed4c1f7873ba20297b
    with:
      do-argocd-diff: false
      validate-target: pallets
    secrets:
      argocd-api-token: ${{ secrets.ARGOCD_API_TOKEN }}
